// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model Example {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? // @db.Text
    access_token      String? // @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? // @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id               String             @id @default(cuid())
    name             String?
    email            String?            @unique
    emailVerified    DateTime?
    role             Role               @default(USER)
    image            String?
    phoneNumber      BigInt?
    accounts         Account[]
    sessions         Session[]
    scheduling       Scheduling[]
    UserTimeInterval UserTimeInterval[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Scheduling {
    id           String   @id @default(uuid())
    date         DateTime
    name         String
    email        String
    observations String?
    created_at   DateTime @default(now())

    user    User   @relation(fields: [user_id], references: [id])
    user_id String

    @@map("schedulings")
}

model UserTimeInterval {
    id                    String @id @default(uuid())
    week_day              Int
    time_start_in_minutes Int
    time_end_in_minutes   Int

    user   User   @relation(fields: [userId], references: [id])
    userId String
}

enum Role {
    USER
    ADMIN
}
